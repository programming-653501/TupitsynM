#include <iostream>
#include <conio.h>
#include <stdio.h>
#include <string>

struct Node
{
	Node *left;
	Node *right;
	std::string word;
	int frequency;
};

void AddNode(std::string str, Node **node)
{
	if (*node == NULL)
	{
		*node = new Node;
		(*node) -> left = NULL;
		(*node) -> right = NULL;
		(*node) -> word = str;
		(*node) -> frequency = 0;
	}
		else
		{
			if (str == (*node) -> word)
			{
				(*node) -> frequency += 1;
				return;
			}
			if (str < (*node) -> word)
			{
				AddNode(str, &(*node) -> left);
			}
			if (str > (*node) -> word)
			{
				AddNode(str, &(*node) -> right);
			}
		}
}

void LeftOrder(Node *node, Node **new_node)
{
	if (node -> left)
	{
		LeftOrder(node -> left);
	}

	if (node -> right)
	{
		LeftOrder(node -> right);
	}

	SortTree(node -> frequency, new_node);
}

SortTree(int number, Node **node)
{
	if (*node == NULL)
	{
		*node = new Node;
		(*node) -> left = NULL;
		(*node) -> right = NULL;
		(*node) -> word = str;
		(*node) -> frequency = 0;
	}
		else
		{
			if (number == (*node) -> frequency)
			{
            	if (str < (*node) -> word)
				{
					AddNode(str, &(*node) -> left);
				}
				if (str > (*node) -> word)
				{
					AddNode(str, &(*node) -> right);
				}
			}
			if (number < (*node) -> frequency)
			{
				AddNode(number, &(*node) -> left);
			}
			if (number > (*node) -> frequency)
			{
				AddNode(number, &(*node) -> right);
			}
        }
}

int main()
{
	FILE *file;

	if ((file = fopen("text.txt", "r")) == NULL)
	{
		std::cout << "File \"text.txt\" can't be opened.\n";
		getch();
		return 1;
	}

	Node *root = new Node;

	while(!feof(file))
	{
		std::string str;
		fscanf(file, "%s", str);
		AddNode(str, &root);
	}

	Node *NewRoot = new Node;
	LeftOrder(root, &NewRoot);

	getch();

	return 0;
}
