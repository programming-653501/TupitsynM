#include <cstdio>
#include <cstdlib>
#include <ctype.h>
#include <vector>
#include <conio.h>
#include <iostream>
#include <fstream>

int enter(std::vector <char> &vecChar_Template)                                 //¬водим длинное число, провер€ем на некорректный ввод
{
	for (;;)
	{
		char letter = '0';

		letter = getche();
		if (strchr("_ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz", letter))
		{
			vecChar_Template.push_back(toupper(letter));
		}
			else
			{
				if (letter == '\r')
				{
					std::cout << "\n";
					return 0;
				}
					else
					{
						vecChar_Template.clear();
						std::cout << "\nIncorrect input. Try again. \n";
						return 1;
					}
			}
	}
}

void main()
{
	std::vector <char> vecChar_Template;

	int fail;

	do
	{
		std::cout << "Enter a template: \n";
		fail = enter(vecChar_Template);
	} while (fail);

	ifstream in("dictionary.txt");

	do
	{
		std::vector <char> vecChar_Word;
		char letter;

		in.get(letter);
		do
		{
			vecChar_Word.push_back(letter);
			in.get(letter);
		} while ( != '\n');



		if (vecChar_Template.size() == vecChar_Word.size())
		{
			int pointer;
			for (pointer = 0; pointer < vecChar_Word.size(); pointer++)
			{
				if (vecChar_Word[pointer] != vecChar_Template[pointer] && vecChar_Template[pointer] != '_') break;
			}
			if (pointer == vecChar_Word.size())
			{
				for (pointer = 0; pointer < vecChar_Word.size(); pointer++) std::cout << vecChar_Word[pointer];
				std::cout << '\n';
			}
			vecChar_Word.clear();
		}
			else
			{
				vecChar_Word.clear();
				continue;
			}
	} while (!feof(ptrFile));

	std::system("pause");

	std::exit(0);
}
